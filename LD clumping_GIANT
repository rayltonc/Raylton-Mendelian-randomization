#path to plink and a bed/bim/fam LD reference dataset

devtools::install_github("explodecomputer/genetics.binaRies")
genetics.binaRies::get_plink_binary()

#load packages
install.packages("dplyr")
install.packages("genetics.binaRies")

library(dplyr)
library(genetics.binaRies)  

# orientate SNPs
#Check Initial Negative ES Values
initial_neg_es <- vcf %>%
  filter(ES < 0)

print(initial_neg_es)
num_rows <- nrow(initial_neg_es)
print(num_rows) ### n =1155345

vcf <- vcf %>%
  mutate(
    Flip = ES < 0,
    ES = ifelse(Flip, -ES, ES),
    TempAllele = ifelse(Flip, REF, NA),
    REF = ifelse(Flip, ALT, REF),
    ALT = ifelse(Flip, TempAllele, ALT),
    AF = ifelse(Flip, 1 - AF, AF)
  )
vcf <- vcf[, !(names(vcf) %in% c("Flip", "TempAllele"))]


# Check if any negative ES still exist
neg_es_after <- vcf %>%
  filter(ES < 0)

print(neg_es_after)
num_rows <- nrow(neg_es_after)
print(num_rows) ### n =0

# Define the significance threshold
threshold <- 5e-8


# Filter for significant p-values
significant_SNPGIANT2018 <- vcf[vcf$P < threshold, ]

#LD clumping 
remotes::install_github("mrcieu/ieugwasr")

library(ieugwasr)

# Extract the .tgz file
untar("C:/Users/raylt/Documents/GWAS/1kg.v3.tgz", exdir = "C:/Users/raylt/Documents/GWAS/1kg.v3")

# Specify the path to the PLINK binary files
plink_bin_path <- genetics.binaRies::get_plink_binary()
bfile_path <- "C:/Users/raylt/Documents/GWAS/1kg.v3/AFR" 

plink_bin_path <-"C:/Users/raylt/Documents/GWAS/plink.exe"
file.exists(plink_bin_path)
system(paste(plink_bin_path, "--version"), intern = TRUE)
 
# Create tibble with additional columns
formatted_data_GIANT <- dplyr::tibble(
  rsid = significant_SNPGIANT2018$ID,
  pval = significant_SNPGIANT2018$P,
  bhat = significant_SNPGIANT2018$ES,
  se = significant_SNPGIANT2018$SE,  
  REF = significant_SNPGIANT2018$REF,
  ALT = significant_SNPGIANT2018$ALT,
  chr = significant_SNPGIANT2018$seqnames,
  bp =significant_SNPGIANT2018$start,
  af = significant_SNPGIANT2018$AF)%>%
  mutate(
    N = 681275 
  )

clumped_results_GIANT <- ld_clump(
  dat = formatted_data_GIANT,
  plink_bin = plink_bin_path,
  bfile = bfile_path, pop = "EUR"
)
##131 SNPS
